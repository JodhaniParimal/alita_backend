#!/usr/bin/env node

/**
 * Module dependencies.
 */
require("../connection");
var app = require("../app");
var io = require("../helpers/socket");
var debug = require("debug")("alita-tools-backend:server");
var http = require("http");

require("dotenv").config();
/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || "8000");
app.set("port", port);
/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
  console.log(`Listening on port: ` + addr.port);
}

// const io = require("socket.io")(server, {
//   cors: {
//     origin: "*",
//     method: "POST, GET, PUT",
//   },
// });

// io.on("connection", (socket) => {
//   console.log("socket connected");
//   socket.on("disconnect", () => {
//     console.log("socket disconnected");
//   });
//   socket.emit("testEvent", "Testing socket communication"); // Optional test event
//   app.set("socket", socket);
// });

// var io = require("socket.io")(server, {
//   cors: {
//     origin: "*",
//     method: "POST, GET, PUT",
//   },
// });
// require("../helpers/socket")(io);

server.listen(port);
io.attach(server, {
  cors: {
    origin: "*",
    method: "POST, GET, PUT",
  },
});
server.on("error", onError);
server.on("listening", onListening);
